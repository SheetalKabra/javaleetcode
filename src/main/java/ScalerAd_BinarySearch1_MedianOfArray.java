import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ScalerAd_BinarySearch1_MedianOfArray {
    public static void main(String[] args) {
        System.out.println(findMedianSortedArrays(new ArrayList<>(Arrays.asList(1,4,5)), new ArrayList<>(Arrays.asList(2,3))));
//        System.out.println(findMedianSortedArrays(new ArrayList<>(Arrays.asList(1,2,3)), new ArrayList<>(Arrays.asList(4))));
//        System.out.println(findMedianSortedArrays(new ArrayList<>(Arrays.asList(-50, -41, -40, -19, 5, 21, 28)), new ArrayList<>(Arrays.asList(-50, -21, -10))));
//        System.out.println(findMedianSortedArrays(new ArrayList<>(Arrays.asListnew ArrayList<>(Arrays.asList(-50, -21, -10))));
    }
    public static double findMedianSortedArrays(final List<Integer> a, final List<Integer> b) {
        ArrayList<Integer> C = merge(a, b);
        int N = C.size();
        double avg = 0.0;
        int medianIndex = N/2;
        if(N%2 == 0){
            //even
            avg = (C.get(medianIndex)+C.get(medianIndex-1))/(double)2;
        }else{
            //odd
            avg = C.get(medianIndex);
        }
        return avg;
    }

    public static ArrayList<Integer> merge(List<Integer> A, List<Integer> B){
        int N = A.size();
        int M = B.size();
        int i=0, j=0, k=0;
        ArrayList<Integer> temp = new ArrayList(N+M);
        while(i<N && j<M){
            if(A.get(i) <= B.get(j)){
                temp.add(k, A.get(i));
                i++;
                k++;
            }else if(A.get(i) > B.get(j)){
                temp.add(k, B.get(j));
                j++;
                k++;
            }
        }
        while(i<N){
            temp.add(k, A.get(i));
            i++;
            k++;
        }
        while(j<M){
            temp.add(k, B.get(j));
            j++;
            k++;
        }
        return temp;
    }
}
